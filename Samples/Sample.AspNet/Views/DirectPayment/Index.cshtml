@model Sample.AspNetCore.ViewModels.RequestDirectPaymentModel
@using Iamport.RestApi.Models
@{
    ViewData["Title"] = "비인증 결제 데모: 구매하기";
}
<div class="row">
    <h1>@ViewData["Title"]</h1>

    <div>
        <p>이 샘플 애플리케이션은 고객에게 카드 번호 및 기타 정보를 입력받아 공인인증서 없이 직접 RestAPI로 결제하는 프로세스를 모사합니다.</p>
        <p>지원하는 결제사는 KG이니시스, 나이스정보통신, JTnet 입니다.</p>
        <p>이 샘플 애플리케이션에서 이루어지는 모든 내용은 애플리케이션의 로컬 메모리에만 유지되므로 애플리케이션이 호스팅된 서버를 종료하면 진행했던 모든 상태가 유실됩니다.</p>
    </div>
    <hr />
    <form id="directpayment" class="form-horizontal" action="@Url.Action("Index", "DirectPayment")" method="post" enctype="application/x-www-form-urlencoded">
        @Html.AntiForgeryToken()
        @Html.ValidationSummary()
        <div class="form-group">
            @Html.LabelFor(model => model.Name, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Name, null, new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Amount, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Amount, new { @class = "form-control", type = "number" })
                @Html.ValidationMessageFor(model => model.Amount, null, new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Vat, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Vat, new { @class = "form-control", type = "number" })
                @Html.ValidationMessageFor(model => model.Vat, null, new { @class = "text-danger" })
            </div>
        </div>
        <hr/>
        <div class="form-group">
            @Html.LabelFor(model => model.PaymentGateway, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.PaymentGateway, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PaymentGateway, null, new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CardNumber, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.CardNumber, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CardNumber, null, new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Expiry, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Expiry, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Expiry, null, new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.AuthenticationNumber, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.AuthenticationNumber, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.AuthenticationNumber, null, new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.PartialPassword, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.PartialPassword, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PartialPassword, null, new { @class = "text-danger" })
            </div>
        </div>
        <hr />
        <div class="form-group">
            @Html.LabelFor(model => model.CustomerName, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.CustomerName, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CustomerName, null, new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CustomerPhoneNumber, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.CustomerPhoneNumber, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CustomerPhoneNumber, null, new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CustomerEmail, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.CustomerEmail, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CustomerEmail, null, new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CustomerAddress, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.CustomerAddress, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CustomerAddress, null, new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CustomerPostCode, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.CustomerPostCode, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CustomerPostCode, null, new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-2">
                <button type="submit" class="btn btn-primary form-control">구매하기</button>
            </div>
        </div>
    </form>
</div>
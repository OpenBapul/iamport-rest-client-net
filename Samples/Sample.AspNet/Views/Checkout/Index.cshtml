@model Sample.AspNetCore.ViewModels.RegisterCheckoutModel
@{
    ViewData["Title"] = "구매-결제 데모: 구매하기";
}
<div class="row">
    <h1>@ViewData["Title"]</h1>

    <div>
        <p>이 샘플 애플리케이션은 일반적인 구매-구매내용확인-결제 프로세스를 모사합니다.</p>
        <p>이 페이지는 고객의 주문 정보(상품명, 총액, 기타 등등)를 구매하는 화면입니다.</p>
        <p>
            편의상 주문 정보와 결제 수단을 한꺼번에 입력할 수 있게 하였지만
            필요에 따라 단계를 나누거나 결제 수단 입력을 결제 화면으로 처리할 수도 있습니다.
        </p>
        <p>이 샘플 애플리케이션에서 이루어지는 모든 내용은 애플리케이션의 로컬 메모리에만 유지되므로 애플리케이션이 호스팅된 서버를 종료하면 진행했던 모든 상태가 유실됩니다.</p>
    </div>
    <hr />
    <form id="checkout" class="form-horizontal" action="@Url.Action("Index", "Checkout")" method="post" enctype="application/x-www-form-urlencoded">
        @Html.AntiForgeryToken()
        <div class="form-group">
            @Html.LabelFor(model => model.Name, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Name, null, new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Amount, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Amount, new { @class = "form-control", type = "number" })
                @Html.ValidationMessageFor(model => model.Amount, null, new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10 checkbox">
                <label>
                    @Html.CheckBoxFor(model => model.IsDigital)
                    @Html.LabelFor(model => model.IsDigital)
                </label>
            </div>
        </div>
        <hr />
        <div class="form-group">
            @Html.LabelFor(model => model.PaymentGateway, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.PaymentGateway, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PaymentGateway, null, new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.PaymentMethod, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.PaymentMethod, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PaymentMethod, null, new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10 checkbox">
                <label>
                    @Html.CheckBoxFor(model => model.UseEscrow)
                    @Html.LabelFor(model => model.UseEscrow)
                </label>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CustomerName, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.CustomerName, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CustomerName, null, new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CustomerPhoneNumber, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.CustomerPhoneNumber, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CustomerPhoneNumber, null, new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CustomerEmail, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.CustomerEmail, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CustomerEmail, null, new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.VirtualBankExpirationTime, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.VirtualBankExpirationTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.VirtualBankExpirationTime, null, new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ReturnUrl, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.ReturnUrl, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ReturnUrl, null, new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-2">
                <button type="submit" class="btn btn-primary form-control">구매하기</button>
            </div>
        </div>
    </form>
</div>
@model Sample.AspNetCore.ViewModels.RequestCheckoutViewModel
@using Iamport.RestApi.Models
@{
    ViewData["Title"] = "구매-결제 데모: 구매하기";
}
<div class="row">
    <h1>@ViewData["Title"]</h1>

    <div>
        <p>이 샘플 애플리케이션은 일반적인 구매-구매내용확인-결제 프로세스를 모사합니다.</p>
        <p>이 페이지는 고객의 주문 정보(상품명, 총액, 기타 등등)를 구매하는 화면입니다.</p>
        <p>편의상 주문 정보와 결제 수단을 한꺼번에 입력할 수 있게 하였지만
        필요에 따라 단계를 나누거나 결제 수단 입력을 결제 화면으로 처리할 수도 있습니다.</p>
        <p>이 샘플 애플리케이션에서 이루어지는 모든 내용은 애플리케이션의 로컬 메모리에만 유지되므로 애플리케이션이 호스팅된 서버를 종료하면 진행했던 모든 상태가 유실됩니다.</p>
    </div>
    <hr />
    <form id="checkout" class="form-horizontal" asp-antiforgery="true">
        <div class="form-group">
            <label asp-for="Name" class="col-md-2 control-label">구매 상품 이름</label>
            <div class="col-md-10">
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            <label asp-for="Amount" class="col-md-2 control-label">금액</label>
            <div class="col-md-10">
                <input asp-for="Amount" class="form-control" type="number" />
                <span asp-validation-for="Amount" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10 checkbox">
                <label>
                    <input type="checkbox" asp-for="IsDigital" />
                    <span>디지털 콘텐츠인지 여부(휴대폰 결제시 계약된 내용대로 선택 필수)</span>
                </label>
            </div>
        </div>
        <hr/>
        <div class="form-group">
            <label asp-for="PaymentGateway" class="col-md-2 control-label">결제 게이트웨이사</label>
            <div class="col-md-10">
                <select asp-for="PaymentGateway" asp-items="@Html.GetEnumSelectList<PaymentGateway>()" class="form-control"></select>
                <span asp-validation-for="PaymentGateway" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            <label asp-for="PaymentMethod" class="col-md-2 control-label">결제 수단</label>
            <div class="col-md-10">
                <select asp-for="PaymentMethod" asp-items="@Html.GetEnumSelectList<PaymentMethod>()" class="form-control"></select>
                <span asp-validation-for="PaymentMethod" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10 checkbox">
                <label>
                    <input type="checkbox" asp-for="UseEscrow" />
                    <span>에스크로 사용</span>
                </label>
            </div>
        </div>
        <div class="form-group">
            <label asp-for="CustomerName" class="col-md-2 control-label">구매자 이름</label>
            <div class="col-md-10">
                <input asp-for="CustomerName" class="form-control" />
                <span asp-validation-for="CustomerName" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            <label asp-for="CustomerPhoneNumber" class="col-md-2 control-label">구매자 전화번호</label>
            <div class="col-md-10">
                <input asp-for="CustomerPhoneNumber" class="form-control" />
                <span asp-validation-for="CustomerPhoneNumber" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            <label asp-for="CustomerEmail" class="col-md-2 control-label">구매자 이메일</label>
            <div class="col-md-10">
                <input asp-for="CustomerEmail" class="form-control" />
                <span asp-validation-for="CustomerEmail" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            <label asp-for="VirtualBankExpirationTime" class="col-md-2 control-label">가상계좌 입금기한</label>
            <div class="col-md-10">
                <input type="datetime-local" asp-for="VirtualBankExpirationTime" class="form-control" />
                <span asp-validation-for="VirtualBankExpirationTime" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-2">
                <button type="submit" class="btn btn-primary form-control">구매하기</button>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <div id="checkoutResult" class="alert"></div>
            </div>
        </div>
    </form>
</div>

@section scripts {
<script type="text/javascript">
    (function () {
        var checkout = function (param) {
            IMP.init(param.iamportId);

            IMP.request_pay(param.request, function (rsp) {
                // 페이지 내에서 결제 결과를 표시하는 것 보다
                // 해당 결제에 대한 진행 결과 페이지로 이동시키는 것이 더 유리합니다.
                // 이렇게 함에 따라 동일한 거래 ID에 대한 중복 결제 요청을 막을 수 있으며
                // 모바일 웹의 경우 웹페이지에서 곧바로 앱으로 이동해버렸을 때 남아있는 웹페이지가 안전한 상태가 됩니다.
                location.href = param.returnUrl;
            });

            return false;
        };

        $('#checkout').submit(function (event) {
            event.preventDefault();

            // Anti-forgery
            var token = $('input[name="__RequestVerificationToken"]').val();
            $.ajaxPrefilter(function (options, originalOptions) {
                if (options.type.toUpperCase() === "POST") {
                    options.data = $.param($.extend(originalOptions.data, { __RequestVerificationToken: token }));
                }
            });

            $.ajax({
                url: '@Url.Action("Index")',
                type: 'POST',
                data: $(this).serialize(),
                dataType: 'json'
            }).done(function (data) {
                checkout(data);
            }).fail(function () {
                $('#checkoutResult')
                    .addClass('alert-danger')
                    .text('오류!');
            });

            return false;
        });
    })();
</script>
}
@model Sample.AspNetCore.ViewModels.RequestPaymentViewModel
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery antiForgery
@using Iamport.RestApi.Models
@{
    ViewData["Title"] = "구매-결제 데모: 결제하기";
    var tokens = antiForgery.GetTokens(this.Context);
}
<div class="row">
    <h1>@ViewData["Title"]</h1>

    <div>
        <p>이 페이지는 고객의 주문을 아임포트 플러그인을 통해 실제로 결제하는 화면입니다.</p>
        <p>
            결제에 실패할 경우 다시 시도할 기회가 주어지며 성공한 경우 결과 페이지로 이동합니다.
        </p>
        <p>이 샘플 애플리케이션에서 이루어지는 모든 내용은 애플리케이션의 로컬 메모리에만 유지되므로 애플리케이션이 호스팅된 서버를 종료하면 진행했던 모든 상태가 유실됩니다.</p>
    </div>
    <hr />
    <div class="panel panel-default">
        <div class="panel-heading">결제할 구매 내용</div>
        <div class="panel-body">
            <ul>
                <li>상품: @Model.Checkout.Name</li>
                <li>금액: @Model.Checkout.Amount.ToString("#,##0.##") 원</li>
                <li>결제 방법: @Html.DisplayFor(model => model.Checkout.PaymentMethod)</li>
            </ul>
            <div id="buttons" class="hide">
                <button id="retry" type="button" class="btn btn-primary">결제 재시도하기</button>
                <a id="restart" href="@Url.Action("Index", "Checkout")" class="btn btn-default">처음부터 다시하기</a>
            </div>
            <div id="result" class="alert"></div>
        </div>
    </div>
</div>

@section scripts {
<script type="text/javascript">
    (function () {
        // 일단 플러그인 초기화
        IMP.init('@Html.Raw(Model.IamportId)');

        // 결제 시도
        var pay = function () {
            $("#result")
                .text("")
                .removeClass('alert-danger');
            $("#buttons").addClass("hide");

            $.ajax('@Html.Raw(Model.PaymentUrl)', {
                method: "POST",
                contentType: "application/json",
                headers: { '@tokens.HeaderName': '@tokens.RequestToken' },
                data: JSON.stringify({ 'checkoutId': '@Html.Raw(Model.Checkout.Id)' })
        }).done(function (result) {
            IMP.request_pay(result, function (response) {
                /*
                일반 PC 웹브라우저의 경우 스크립트를 통해 결과를 받을 수 있습니다.
                그러나 모바일 웹브라우저 또는 앱내 WebView인 경우 이 스크립트는 실행되지 않습니다.
                따라서 모바일/앱 환경에서는 반드시 returnUrl 또는 appScheme을 설정해야 합니다
                */
                if (response.success) {
                    // 성공할 경우 원래 처리할 returnUrl로 이동합니다.
                    location.href = result.m_redirect_url;
                } else {
                    // 실패할 경우 오류 메시지를 표시하고 재시도 기회를 줍니다.
                    $("#result")
                        .text(response.error_msg)
                        .addClass('alert-danger');
                    $("#buttons").removeClass("hide");

                    // 또한 실패 결과를 업데이트 합니다.
                    $.ajax(result.notice_url, {
                        method: "POST"
                    });
                }
            });
        }).error(function () {
            // 실패할 경우 오류 메시지를 표시하고 재시도 기회를 줍니다.
            $("#result")
                .text("결제를 등록하는데 실패하였습니다.")
                .addClass('alert-danger');
            $("#buttons").removeClass("hide");
        });
    }

        // 재시도
        $("#retry").click(function () {
            pay();
        });

    // 페이지 로드 되면 곧바로 결제 시도
    pay();
    })();
</script>
}

@section scripts
{
    <script type="text/javascript" src="https://service.iamport.kr/js/iamport.payment-1.1.3.js"></script>
}